// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: live/request/request_live.proto

package com.volcengine.service.live.model.request;

/**
 * Protobuf type {@code Volcengine.Live.Models.Request.ListDomainDetailRequest}
 */
public final class ListDomainDetailRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Volcengine.Live.Models.Request.ListDomainDetailRequest)
    ListDomainDetailRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListDomainDetailRequest.newBuilder() to construct.
  private ListDomainDetailRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListDomainDetailRequest() {
    vhostList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    domainStatusList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    domainTypeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    domainRegionList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    domainNameList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListDomainDetailRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ListDomainDetailRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            pageNum_ = input.readInt64();
            break;
          }
          case 16: {

            pageSize_ = input.readInt64();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              vhostList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            vhostList_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              domainStatusList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            domainStatusList_.add(s);
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              domainTypeList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            domainTypeList_.add(s);
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              domainRegionList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            domainRegionList_.add(s);
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              domainNameList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000010;
            }
            domainNameList_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        vhostList_ = vhostList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        domainStatusList_ = domainStatusList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        domainTypeList_ = domainTypeList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        domainRegionList_ = domainRegionList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        domainNameList_ = domainNameList_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.volcengine.service.live.model.request.LiveRequest.internal_static_Volcengine_Live_Models_Request_ListDomainDetailRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.volcengine.service.live.model.request.LiveRequest.internal_static_Volcengine_Live_Models_Request_ListDomainDetailRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.volcengine.service.live.model.request.ListDomainDetailRequest.class, com.volcengine.service.live.model.request.ListDomainDetailRequest.Builder.class);
  }

  public static final int PAGENUM_FIELD_NUMBER = 1;
  private long pageNum_;
  /**
   * <pre>
   *当前页码，取值范围为 。
   * </pre>
   *
   * <code>int64 PageNum = 1;</code>
   * @return The pageNum.
   */
  @java.lang.Override
  public long getPageNum() {
    return pageNum_;
  }

  public static final int PAGESIZE_FIELD_NUMBER = 2;
  private long pageSize_;
  /**
   * <pre>
   *分页大小，取值范围为 。
   * </pre>
   *
   * <code>int64 PageSize = 2;</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public long getPageSize() {
    return pageSize_;
  }

  public static final int VHOSTLIST_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList vhostList_;
  /**
   * <pre>
   *配置空间列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string VhostList = 3;</code>
   * @return A list containing the vhostList.
   */
  public com.google.protobuf.ProtocolStringList
      getVhostListList() {
    return vhostList_;
  }
  /**
   * <pre>
   *配置空间列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string VhostList = 3;</code>
   * @return The count of vhostList.
   */
  public int getVhostListCount() {
    return vhostList_.size();
  }
  /**
   * <pre>
   *配置空间列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string VhostList = 3;</code>
   * @param index The index of the element to return.
   * @return The vhostList at the given index.
   */
  public java.lang.String getVhostList(int index) {
    return vhostList_.get(index);
  }
  /**
   * <pre>
   *配置空间列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string VhostList = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the vhostList at the given index.
   */
  public com.google.protobuf.ByteString
      getVhostListBytes(int index) {
    return vhostList_.getByteString(index);
  }

  public static final int DOMAINSTATUSLIST_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList domainStatusList_;
  /**
   * <pre>
   *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
   * &lt;li&gt;0：正常；
   * &lt;li&gt;1：审核中；
   * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
   * &lt;li&gt;3：删除；
   * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
   * &lt;li&gt;5：欠费关停。
   * </pre>
   *
   * <code>repeated string DomainStatusList = 4;</code>
   * @return A list containing the domainStatusList.
   */
  public com.google.protobuf.ProtocolStringList
      getDomainStatusListList() {
    return domainStatusList_;
  }
  /**
   * <pre>
   *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
   * &lt;li&gt;0：正常；
   * &lt;li&gt;1：审核中；
   * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
   * &lt;li&gt;3：删除；
   * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
   * &lt;li&gt;5：欠费关停。
   * </pre>
   *
   * <code>repeated string DomainStatusList = 4;</code>
   * @return The count of domainStatusList.
   */
  public int getDomainStatusListCount() {
    return domainStatusList_.size();
  }
  /**
   * <pre>
   *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
   * &lt;li&gt;0：正常；
   * &lt;li&gt;1：审核中；
   * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
   * &lt;li&gt;3：删除；
   * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
   * &lt;li&gt;5：欠费关停。
   * </pre>
   *
   * <code>repeated string DomainStatusList = 4;</code>
   * @param index The index of the element to return.
   * @return The domainStatusList at the given index.
   */
  public java.lang.String getDomainStatusList(int index) {
    return domainStatusList_.get(index);
  }
  /**
   * <pre>
   *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
   * &lt;li&gt;0：正常；
   * &lt;li&gt;1：审核中；
   * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
   * &lt;li&gt;3：删除；
   * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
   * &lt;li&gt;5：欠费关停。
   * </pre>
   *
   * <code>repeated string DomainStatusList = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the domainStatusList at the given index.
   */
  public com.google.protobuf.ByteString
      getDomainStatusListBytes(int index) {
    return domainStatusList_.getByteString(index);
  }

  public static final int DOMAINTYPELIST_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList domainTypeList_;
  /**
   * <pre>
   *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
   * &lt;li&gt;push：推流域名；
   * &lt;li&gt;pull-flv：拉流域名。
   * </pre>
   *
   * <code>repeated string DomainTypeList = 5;</code>
   * @return A list containing the domainTypeList.
   */
  public com.google.protobuf.ProtocolStringList
      getDomainTypeListList() {
    return domainTypeList_;
  }
  /**
   * <pre>
   *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
   * &lt;li&gt;push：推流域名；
   * &lt;li&gt;pull-flv：拉流域名。
   * </pre>
   *
   * <code>repeated string DomainTypeList = 5;</code>
   * @return The count of domainTypeList.
   */
  public int getDomainTypeListCount() {
    return domainTypeList_.size();
  }
  /**
   * <pre>
   *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
   * &lt;li&gt;push：推流域名；
   * &lt;li&gt;pull-flv：拉流域名。
   * </pre>
   *
   * <code>repeated string DomainTypeList = 5;</code>
   * @param index The index of the element to return.
   * @return The domainTypeList at the given index.
   */
  public java.lang.String getDomainTypeList(int index) {
    return domainTypeList_.get(index);
  }
  /**
   * <pre>
   *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
   * &lt;li&gt;push：推流域名；
   * &lt;li&gt;pull-flv：拉流域名。
   * </pre>
   *
   * <code>repeated string DomainTypeList = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the domainTypeList at the given index.
   */
  public com.google.protobuf.ByteString
      getDomainTypeListBytes(int index) {
    return domainTypeList_.getByteString(index);
  }

  public static final int DOMAINREGIONLIST_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList domainRegionList_;
  /**
   * <pre>
   *域名区域列表。缺省情况下表示过滤全部，区域包括：
   * &lt;li&gt;cn：中国大陆；
   * &lt;li&gt;oversea：海外。
   * </pre>
   *
   * <code>repeated string DomainRegionList = 6;</code>
   * @return A list containing the domainRegionList.
   */
  public com.google.protobuf.ProtocolStringList
      getDomainRegionListList() {
    return domainRegionList_;
  }
  /**
   * <pre>
   *域名区域列表。缺省情况下表示过滤全部，区域包括：
   * &lt;li&gt;cn：中国大陆；
   * &lt;li&gt;oversea：海外。
   * </pre>
   *
   * <code>repeated string DomainRegionList = 6;</code>
   * @return The count of domainRegionList.
   */
  public int getDomainRegionListCount() {
    return domainRegionList_.size();
  }
  /**
   * <pre>
   *域名区域列表。缺省情况下表示过滤全部，区域包括：
   * &lt;li&gt;cn：中国大陆；
   * &lt;li&gt;oversea：海外。
   * </pre>
   *
   * <code>repeated string DomainRegionList = 6;</code>
   * @param index The index of the element to return.
   * @return The domainRegionList at the given index.
   */
  public java.lang.String getDomainRegionList(int index) {
    return domainRegionList_.get(index);
  }
  /**
   * <pre>
   *域名区域列表。缺省情况下表示过滤全部，区域包括：
   * &lt;li&gt;cn：中国大陆；
   * &lt;li&gt;oversea：海外。
   * </pre>
   *
   * <code>repeated string DomainRegionList = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the domainRegionList at the given index.
   */
  public com.google.protobuf.ByteString
      getDomainRegionListBytes(int index) {
    return domainRegionList_.getByteString(index);
  }

  public static final int DOMAINNAMELIST_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList domainNameList_;
  /**
   * <pre>
   *域名名称列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string DomainNameList = 7;</code>
   * @return A list containing the domainNameList.
   */
  public com.google.protobuf.ProtocolStringList
      getDomainNameListList() {
    return domainNameList_;
  }
  /**
   * <pre>
   *域名名称列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string DomainNameList = 7;</code>
   * @return The count of domainNameList.
   */
  public int getDomainNameListCount() {
    return domainNameList_.size();
  }
  /**
   * <pre>
   *域名名称列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string DomainNameList = 7;</code>
   * @param index The index of the element to return.
   * @return The domainNameList at the given index.
   */
  public java.lang.String getDomainNameList(int index) {
    return domainNameList_.get(index);
  }
  /**
   * <pre>
   *域名名称列表，缺省情况下表示过滤全部。
   * </pre>
   *
   * <code>repeated string DomainNameList = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the domainNameList at the given index.
   */
  public com.google.protobuf.ByteString
      getDomainNameListBytes(int index) {
    return domainNameList_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pageNum_ != 0L) {
      output.writeInt64(1, pageNum_);
    }
    if (pageSize_ != 0L) {
      output.writeInt64(2, pageSize_);
    }
    for (int i = 0; i < vhostList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, vhostList_.getRaw(i));
    }
    for (int i = 0; i < domainStatusList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, domainStatusList_.getRaw(i));
    }
    for (int i = 0; i < domainTypeList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, domainTypeList_.getRaw(i));
    }
    for (int i = 0; i < domainRegionList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, domainRegionList_.getRaw(i));
    }
    for (int i = 0; i < domainNameList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, domainNameList_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pageNum_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, pageNum_);
    }
    if (pageSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, pageSize_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < vhostList_.size(); i++) {
        dataSize += computeStringSizeNoTag(vhostList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getVhostListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domainStatusList_.size(); i++) {
        dataSize += computeStringSizeNoTag(domainStatusList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDomainStatusListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domainTypeList_.size(); i++) {
        dataSize += computeStringSizeNoTag(domainTypeList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDomainTypeListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domainRegionList_.size(); i++) {
        dataSize += computeStringSizeNoTag(domainRegionList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDomainRegionListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domainNameList_.size(); i++) {
        dataSize += computeStringSizeNoTag(domainNameList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDomainNameListList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.volcengine.service.live.model.request.ListDomainDetailRequest)) {
      return super.equals(obj);
    }
    com.volcengine.service.live.model.request.ListDomainDetailRequest other = (com.volcengine.service.live.model.request.ListDomainDetailRequest) obj;

    if (getPageNum()
        != other.getPageNum()) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getVhostListList()
        .equals(other.getVhostListList())) return false;
    if (!getDomainStatusListList()
        .equals(other.getDomainStatusListList())) return false;
    if (!getDomainTypeListList()
        .equals(other.getDomainTypeListList())) return false;
    if (!getDomainRegionListList()
        .equals(other.getDomainRegionListList())) return false;
    if (!getDomainNameListList()
        .equals(other.getDomainNameListList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PAGENUM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPageNum());
    hash = (37 * hash) + PAGESIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPageSize());
    if (getVhostListCount() > 0) {
      hash = (37 * hash) + VHOSTLIST_FIELD_NUMBER;
      hash = (53 * hash) + getVhostListList().hashCode();
    }
    if (getDomainStatusListCount() > 0) {
      hash = (37 * hash) + DOMAINSTATUSLIST_FIELD_NUMBER;
      hash = (53 * hash) + getDomainStatusListList().hashCode();
    }
    if (getDomainTypeListCount() > 0) {
      hash = (37 * hash) + DOMAINTYPELIST_FIELD_NUMBER;
      hash = (53 * hash) + getDomainTypeListList().hashCode();
    }
    if (getDomainRegionListCount() > 0) {
      hash = (37 * hash) + DOMAINREGIONLIST_FIELD_NUMBER;
      hash = (53 * hash) + getDomainRegionListList().hashCode();
    }
    if (getDomainNameListCount() > 0) {
      hash = (37 * hash) + DOMAINNAMELIST_FIELD_NUMBER;
      hash = (53 * hash) + getDomainNameListList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.live.model.request.ListDomainDetailRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.volcengine.service.live.model.request.ListDomainDetailRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Volcengine.Live.Models.Request.ListDomainDetailRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Volcengine.Live.Models.Request.ListDomainDetailRequest)
      com.volcengine.service.live.model.request.ListDomainDetailRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.volcengine.service.live.model.request.LiveRequest.internal_static_Volcengine_Live_Models_Request_ListDomainDetailRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.volcengine.service.live.model.request.LiveRequest.internal_static_Volcengine_Live_Models_Request_ListDomainDetailRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.volcengine.service.live.model.request.ListDomainDetailRequest.class, com.volcengine.service.live.model.request.ListDomainDetailRequest.Builder.class);
    }

    // Construct using com.volcengine.service.live.model.request.ListDomainDetailRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pageNum_ = 0L;

      pageSize_ = 0L;

      vhostList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      domainStatusList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      domainTypeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      domainRegionList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      domainNameList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.volcengine.service.live.model.request.LiveRequest.internal_static_Volcengine_Live_Models_Request_ListDomainDetailRequest_descriptor;
    }

    @java.lang.Override
    public com.volcengine.service.live.model.request.ListDomainDetailRequest getDefaultInstanceForType() {
      return com.volcengine.service.live.model.request.ListDomainDetailRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.volcengine.service.live.model.request.ListDomainDetailRequest build() {
      com.volcengine.service.live.model.request.ListDomainDetailRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.volcengine.service.live.model.request.ListDomainDetailRequest buildPartial() {
      com.volcengine.service.live.model.request.ListDomainDetailRequest result = new com.volcengine.service.live.model.request.ListDomainDetailRequest(this);
      int from_bitField0_ = bitField0_;
      result.pageNum_ = pageNum_;
      result.pageSize_ = pageSize_;
      if (((bitField0_ & 0x00000001) != 0)) {
        vhostList_ = vhostList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.vhostList_ = vhostList_;
      if (((bitField0_ & 0x00000002) != 0)) {
        domainStatusList_ = domainStatusList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.domainStatusList_ = domainStatusList_;
      if (((bitField0_ & 0x00000004) != 0)) {
        domainTypeList_ = domainTypeList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.domainTypeList_ = domainTypeList_;
      if (((bitField0_ & 0x00000008) != 0)) {
        domainRegionList_ = domainRegionList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.domainRegionList_ = domainRegionList_;
      if (((bitField0_ & 0x00000010) != 0)) {
        domainNameList_ = domainNameList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.domainNameList_ = domainNameList_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.volcengine.service.live.model.request.ListDomainDetailRequest) {
        return mergeFrom((com.volcengine.service.live.model.request.ListDomainDetailRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.volcengine.service.live.model.request.ListDomainDetailRequest other) {
      if (other == com.volcengine.service.live.model.request.ListDomainDetailRequest.getDefaultInstance()) return this;
      if (other.getPageNum() != 0L) {
        setPageNum(other.getPageNum());
      }
      if (other.getPageSize() != 0L) {
        setPageSize(other.getPageSize());
      }
      if (!other.vhostList_.isEmpty()) {
        if (vhostList_.isEmpty()) {
          vhostList_ = other.vhostList_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureVhostListIsMutable();
          vhostList_.addAll(other.vhostList_);
        }
        onChanged();
      }
      if (!other.domainStatusList_.isEmpty()) {
        if (domainStatusList_.isEmpty()) {
          domainStatusList_ = other.domainStatusList_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDomainStatusListIsMutable();
          domainStatusList_.addAll(other.domainStatusList_);
        }
        onChanged();
      }
      if (!other.domainTypeList_.isEmpty()) {
        if (domainTypeList_.isEmpty()) {
          domainTypeList_ = other.domainTypeList_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureDomainTypeListIsMutable();
          domainTypeList_.addAll(other.domainTypeList_);
        }
        onChanged();
      }
      if (!other.domainRegionList_.isEmpty()) {
        if (domainRegionList_.isEmpty()) {
          domainRegionList_ = other.domainRegionList_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureDomainRegionListIsMutable();
          domainRegionList_.addAll(other.domainRegionList_);
        }
        onChanged();
      }
      if (!other.domainNameList_.isEmpty()) {
        if (domainNameList_.isEmpty()) {
          domainNameList_ = other.domainNameList_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureDomainNameListIsMutable();
          domainNameList_.addAll(other.domainNameList_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.volcengine.service.live.model.request.ListDomainDetailRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.volcengine.service.live.model.request.ListDomainDetailRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long pageNum_ ;
    /**
     * <pre>
     *当前页码，取值范围为 。
     * </pre>
     *
     * <code>int64 PageNum = 1;</code>
     * @return The pageNum.
     */
    @java.lang.Override
    public long getPageNum() {
      return pageNum_;
    }
    /**
     * <pre>
     *当前页码，取值范围为 。
     * </pre>
     *
     * <code>int64 PageNum = 1;</code>
     * @param value The pageNum to set.
     * @return This builder for chaining.
     */
    public Builder setPageNum(long value) {
      
      pageNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前页码，取值范围为 。
     * </pre>
     *
     * <code>int64 PageNum = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageNum() {
      
      pageNum_ = 0L;
      onChanged();
      return this;
    }

    private long pageSize_ ;
    /**
     * <pre>
     *分页大小，取值范围为 。
     * </pre>
     *
     * <code>int64 PageSize = 2;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public long getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     *分页大小，取值范围为 。
     * </pre>
     *
     * <code>int64 PageSize = 2;</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(long value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *分页大小，取值范围为 。
     * </pre>
     *
     * <code>int64 PageSize = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList vhostList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureVhostListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        vhostList_ = new com.google.protobuf.LazyStringArrayList(vhostList_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @return A list containing the vhostList.
     */
    public com.google.protobuf.ProtocolStringList
        getVhostListList() {
      return vhostList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @return The count of vhostList.
     */
    public int getVhostListCount() {
      return vhostList_.size();
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param index The index of the element to return.
     * @return The vhostList at the given index.
     */
    public java.lang.String getVhostList(int index) {
      return vhostList_.get(index);
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the vhostList at the given index.
     */
    public com.google.protobuf.ByteString
        getVhostListBytes(int index) {
      return vhostList_.getByteString(index);
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param index The index to set the value at.
     * @param value The vhostList to set.
     * @return This builder for chaining.
     */
    public Builder setVhostList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVhostListIsMutable();
      vhostList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param value The vhostList to add.
     * @return This builder for chaining.
     */
    public Builder addVhostList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVhostListIsMutable();
      vhostList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param values The vhostList to add.
     * @return This builder for chaining.
     */
    public Builder addAllVhostList(
        java.lang.Iterable<java.lang.String> values) {
      ensureVhostListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, vhostList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearVhostList() {
      vhostList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *配置空间列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string VhostList = 3;</code>
     * @param value The bytes of the vhostList to add.
     * @return This builder for chaining.
     */
    public Builder addVhostListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureVhostListIsMutable();
      vhostList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList domainStatusList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDomainStatusListIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        domainStatusList_ = new com.google.protobuf.LazyStringArrayList(domainStatusList_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @return A list containing the domainStatusList.
     */
    public com.google.protobuf.ProtocolStringList
        getDomainStatusListList() {
      return domainStatusList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @return The count of domainStatusList.
     */
    public int getDomainStatusListCount() {
      return domainStatusList_.size();
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param index The index of the element to return.
     * @return The domainStatusList at the given index.
     */
    public java.lang.String getDomainStatusList(int index) {
      return domainStatusList_.get(index);
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the domainStatusList at the given index.
     */
    public com.google.protobuf.ByteString
        getDomainStatusListBytes(int index) {
      return domainStatusList_.getByteString(index);
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param index The index to set the value at.
     * @param value The domainStatusList to set.
     * @return This builder for chaining.
     */
    public Builder setDomainStatusList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainStatusListIsMutable();
      domainStatusList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param value The domainStatusList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainStatusList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainStatusListIsMutable();
      domainStatusList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param values The domainStatusList to add.
     * @return This builder for chaining.
     */
    public Builder addAllDomainStatusList(
        java.lang.Iterable<java.lang.String> values) {
      ensureDomainStatusListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, domainStatusList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainStatusList() {
      domainStatusList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名状态列表。缺省情况下表示过滤全部。状态说明如下所示。
     * &lt;li&gt;0：正常；
     * &lt;li&gt;1：审核中；
     * &lt;li&gt;2：禁用，禁止使用，此时domain不生效；
     * &lt;li&gt;3：删除；
     * &lt;li&gt;4：审核被驳回。审核不通过，需要重新创建并审核；
     * &lt;li&gt;5：欠费关停。
     * </pre>
     *
     * <code>repeated string DomainStatusList = 4;</code>
     * @param value The bytes of the domainStatusList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainStatusListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDomainStatusListIsMutable();
      domainStatusList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList domainTypeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDomainTypeListIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        domainTypeList_ = new com.google.protobuf.LazyStringArrayList(domainTypeList_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @return A list containing the domainTypeList.
     */
    public com.google.protobuf.ProtocolStringList
        getDomainTypeListList() {
      return domainTypeList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @return The count of domainTypeList.
     */
    public int getDomainTypeListCount() {
      return domainTypeList_.size();
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param index The index of the element to return.
     * @return The domainTypeList at the given index.
     */
    public java.lang.String getDomainTypeList(int index) {
      return domainTypeList_.get(index);
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the domainTypeList at the given index.
     */
    public com.google.protobuf.ByteString
        getDomainTypeListBytes(int index) {
      return domainTypeList_.getByteString(index);
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param index The index to set the value at.
     * @param value The domainTypeList to set.
     * @return This builder for chaining.
     */
    public Builder setDomainTypeList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainTypeListIsMutable();
      domainTypeList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param value The domainTypeList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainTypeList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainTypeListIsMutable();
      domainTypeList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param values The domainTypeList to add.
     * @return This builder for chaining.
     */
    public Builder addAllDomainTypeList(
        java.lang.Iterable<java.lang.String> values) {
      ensureDomainTypeListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, domainTypeList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainTypeList() {
      domainTypeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名类型列表。缺省情况下表示过滤全部。域名类型包括：
     * &lt;li&gt;push：推流域名；
     * &lt;li&gt;pull-flv：拉流域名。
     * </pre>
     *
     * <code>repeated string DomainTypeList = 5;</code>
     * @param value The bytes of the domainTypeList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainTypeListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDomainTypeListIsMutable();
      domainTypeList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList domainRegionList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDomainRegionListIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        domainRegionList_ = new com.google.protobuf.LazyStringArrayList(domainRegionList_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @return A list containing the domainRegionList.
     */
    public com.google.protobuf.ProtocolStringList
        getDomainRegionListList() {
      return domainRegionList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @return The count of domainRegionList.
     */
    public int getDomainRegionListCount() {
      return domainRegionList_.size();
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param index The index of the element to return.
     * @return The domainRegionList at the given index.
     */
    public java.lang.String getDomainRegionList(int index) {
      return domainRegionList_.get(index);
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the domainRegionList at the given index.
     */
    public com.google.protobuf.ByteString
        getDomainRegionListBytes(int index) {
      return domainRegionList_.getByteString(index);
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param index The index to set the value at.
     * @param value The domainRegionList to set.
     * @return This builder for chaining.
     */
    public Builder setDomainRegionList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainRegionListIsMutable();
      domainRegionList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param value The domainRegionList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainRegionList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainRegionListIsMutable();
      domainRegionList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param values The domainRegionList to add.
     * @return This builder for chaining.
     */
    public Builder addAllDomainRegionList(
        java.lang.Iterable<java.lang.String> values) {
      ensureDomainRegionListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, domainRegionList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainRegionList() {
      domainRegionList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名区域列表。缺省情况下表示过滤全部，区域包括：
     * &lt;li&gt;cn：中国大陆；
     * &lt;li&gt;oversea：海外。
     * </pre>
     *
     * <code>repeated string DomainRegionList = 6;</code>
     * @param value The bytes of the domainRegionList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainRegionListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDomainRegionListIsMutable();
      domainRegionList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList domainNameList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDomainNameListIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        domainNameList_ = new com.google.protobuf.LazyStringArrayList(domainNameList_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @return A list containing the domainNameList.
     */
    public com.google.protobuf.ProtocolStringList
        getDomainNameListList() {
      return domainNameList_.getUnmodifiableView();
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @return The count of domainNameList.
     */
    public int getDomainNameListCount() {
      return domainNameList_.size();
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param index The index of the element to return.
     * @return The domainNameList at the given index.
     */
    public java.lang.String getDomainNameList(int index) {
      return domainNameList_.get(index);
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the domainNameList at the given index.
     */
    public com.google.protobuf.ByteString
        getDomainNameListBytes(int index) {
      return domainNameList_.getByteString(index);
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param index The index to set the value at.
     * @param value The domainNameList to set.
     * @return This builder for chaining.
     */
    public Builder setDomainNameList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainNameListIsMutable();
      domainNameList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param value The domainNameList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainNameList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainNameListIsMutable();
      domainNameList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param values The domainNameList to add.
     * @return This builder for chaining.
     */
    public Builder addAllDomainNameList(
        java.lang.Iterable<java.lang.String> values) {
      ensureDomainNameListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, domainNameList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainNameList() {
      domainNameList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *域名名称列表，缺省情况下表示过滤全部。
     * </pre>
     *
     * <code>repeated string DomainNameList = 7;</code>
     * @param value The bytes of the domainNameList to add.
     * @return This builder for chaining.
     */
    public Builder addDomainNameListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDomainNameListIsMutable();
      domainNameList_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Volcengine.Live.Models.Request.ListDomainDetailRequest)
  }

  // @@protoc_insertion_point(class_scope:Volcengine.Live.Models.Request.ListDomainDetailRequest)
  private static final com.volcengine.service.live.model.request.ListDomainDetailRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.volcengine.service.live.model.request.ListDomainDetailRequest();
  }

  public static com.volcengine.service.live.model.request.ListDomainDetailRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListDomainDetailRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListDomainDetailRequest>() {
    @java.lang.Override
    public ListDomainDetailRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ListDomainDetailRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ListDomainDetailRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListDomainDetailRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.volcengine.service.live.model.request.ListDomainDetailRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

